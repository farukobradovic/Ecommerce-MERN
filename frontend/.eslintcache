[{"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\index.js":"1","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\App.js":"2","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\products.js":"7","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\store.js":"11","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\productReducer.js":"12","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Message.js":"16","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\cartActions.js":"20","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\userReducers.js":"21","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\LoginScreen.js":"23","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\FormContainer.js":"24","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\userActions.js":"25","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\RegisterScreen.js":"26","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProfileScreen.js":"27","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\CheckoutSteps.js":"29","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\PaymentScreen.js":"30","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\orderActions.js":"34","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\OrderScreen.js":"35","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\UserListScreen.js":"36","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\UserEditScreen.js":"37","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProductListScreen.js":"38","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProductEditScreen.js":"39","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\OrderListScreen.js":"40","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\SearchBox.js":"41"},{"size":597,"mtime":1610804196993,"results":"42","hashOfConfig":"43"},{"size":2689,"mtime":1611440152444,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":2784,"mtime":1611440363925,"results":"46","hashOfConfig":"43"},{"size":335,"mtime":1610552979161,"results":"47","hashOfConfig":"43"},{"size":1163,"mtime":1611440778856,"results":"48","hashOfConfig":"43"},{"size":2486,"mtime":1610554259945,"results":"49","hashOfConfig":"43"},{"size":838,"mtime":1610562289940,"results":"50","hashOfConfig":"43"},{"size":1795,"mtime":1610914017297,"results":"51","hashOfConfig":"43"},{"size":7587,"mtime":1611439785291,"results":"52","hashOfConfig":"43"},{"size":2351,"mtime":1611428883064,"results":"53","hashOfConfig":"43"},{"size":3227,"mtime":1611428854721,"results":"54","hashOfConfig":"43"},{"size":1377,"mtime":1611428765888,"results":"55","hashOfConfig":"43"},{"size":4680,"mtime":1611440478713,"results":"56","hashOfConfig":"43"},{"size":410,"mtime":1610812357954,"results":"57","hashOfConfig":"43"},{"size":204,"mtime":1610809973153,"results":"58","hashOfConfig":"43"},{"size":3661,"mtime":1610913234256,"results":"59","hashOfConfig":"43"},{"size":1195,"mtime":1611088192851,"results":"60","hashOfConfig":"43"},{"size":243,"mtime":1611088075706,"results":"61","hashOfConfig":"43"},{"size":1267,"mtime":1611088158011,"results":"62","hashOfConfig":"43"},{"size":3511,"mtime":1611256717127,"results":"63","hashOfConfig":"43"},{"size":1502,"mtime":1611254766326,"results":"64","hashOfConfig":"43"},{"size":2243,"mtime":1610994894667,"results":"65","hashOfConfig":"43"},{"size":352,"mtime":1610987211440,"results":"66","hashOfConfig":"43"},{"size":6285,"mtime":1611255620281,"results":"67","hashOfConfig":"43"},{"size":3248,"mtime":1611011272901,"results":"68","hashOfConfig":"43"},{"size":5473,"mtime":1611173866076,"results":"69","hashOfConfig":"43"},{"size":2611,"mtime":1611088241941,"results":"70","hashOfConfig":"43"},{"size":1292,"mtime":1611087299184,"results":"71","hashOfConfig":"43"},{"size":1854,"mtime":1611088350853,"results":"72","hashOfConfig":"43"},{"size":5003,"mtime":1611102524808,"results":"73","hashOfConfig":"43"},{"size":3461,"mtime":1611425878726,"results":"74","hashOfConfig":"43"},{"size":1229,"mtime":1611425842137,"results":"75","hashOfConfig":"43"},{"size":5098,"mtime":1611426074208,"results":"76","hashOfConfig":"43"},{"size":7568,"mtime":1611426614312,"results":"77","hashOfConfig":"43"},{"size":2758,"mtime":1611242584149,"results":"78","hashOfConfig":"43"},{"size":3266,"mtime":1611256601054,"results":"79","hashOfConfig":"43"},{"size":3860,"mtime":1611348067443,"results":"80","hashOfConfig":"43"},{"size":6179,"mtime":1611353411713,"results":"81","hashOfConfig":"43"},{"size":2542,"mtime":1611419732336,"results":"82","hashOfConfig":"43"},{"size":792,"mtime":1611440111143,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"spl1lr",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\index.js",[],["173","174"],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\App.js",["175"],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Header.js",["176"],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\HomeScreen.js",["177"],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\products.js",[],["178","179"],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\store.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\productActions.js",["180"],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\CartScreen.js",["181"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt='dssdsd' fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <FormControl\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        );\r\n                      }}\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((c) => (\r\n                        <option key={c + 1} value={c + 1}>\r\n                          {c + 1}\r\n                        </option>\r\n                      ))}\r\n                    </FormControl>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, cur) => acc + cur.qty, 0)})\r\n                items.\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, cur) => acc + cur.qty * cur.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\userActions.js",["182"],"import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATEUSER_REQUEST,\r\n  USER_UPDATEUSER_SUCCESS,\r\n  USER_UPDATEUSER_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATEUSER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATEUSER_SUCCESS,\r\n    });\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATEUSER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ShippingScreen.js",["183"],"import React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continoue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\PlaceOrderScreen.js",["184"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //Calculate prices\r\n  cart.itemsPrice = cart.cartItems.reduce(\r\n    (acc, item) => acc + item.price * item.qty,\r\n    0\r\n  );\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100;\r\n  cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x {item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {error && <Message variant='danger'>{error}</Message>}\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn btn-block'\r\n                    onClick={placeOrderHandler}\r\n                  >\r\n                    Place order\r\n                  </Button>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\OrderScreen.js",["185"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderActions\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order, successDeliver]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark as delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Faruk\\Desktop\\E-commerce\\frontend\\src\\screens\\SearchBox.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":21,"column":8,"nodeType":"192","messageId":"193","endLine":21,"endColumn":17},{"ruleId":"190","severity":1,"message":"194","line":2,"column":47,"nodeType":"192","messageId":"193","endLine":2,"endColumn":51},{"ruleId":"190","severity":1,"message":"195","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"186","replacedBy":"196"},{"ruleId":"188","replacedBy":"197"},{"ruleId":"190","severity":1,"message":"198","line":14,"column":3,"nodeType":"192","messageId":"193","endLine":14,"endColumn":23},{"ruleId":"190","severity":1,"message":"199","line":10,"column":3,"nodeType":"192","messageId":"193","endLine":10,"endColumn":7},{"ruleId":"190","severity":1,"message":"200","line":230,"column":13,"nodeType":"192","messageId":"193","endLine":230,"endColumn":17},{"ruleId":"190","severity":1,"message":"201","line":2,"column":24,"nodeType":"192","messageId":"193","endLine":2,"endColumn":27},{"ruleId":"190","severity":1,"message":"195","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":75,"column":6,"nodeType":"204","endLine":75,"endColumn":60,"suggestions":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'SearchBox' is defined but never used.","Identifier","unusedVar","'Item' is defined but never used.","'useState' is defined but never used.",["206"],["207"],"'PRODUCT_CREATE_RESET' is defined but never used.","'Form' is defined but never used.","'data' is assigned a value but never used.","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["208"],"no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, successDeliver, userInfo, history]",{"range":"211","text":"212"},[2399,2453],"[dispatch, orderId, successPay, order, successDeliver, userInfo, history]"]